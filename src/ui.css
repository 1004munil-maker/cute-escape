:root{ --bg:#fff7fb; --ink:#2a2a2a; --accent:#ff8fb1; --panel:#ffffff; }
*{ box-sizing:border-box; -webkit-tap-highlight-color: transparent; }

/* 画面全体の中央寄せ＆背景 */
html,body{ margin:0; height:100%; }
body{
  display:grid;
  place-items:center;
  background:var(--bg);
  overflow:hidden;
}

/* 9:18の枠（ここにすべて収める） */
#viewport{
  position:relative;
  width: min(92vw, 46vh);    /* ← 横幅は画面幅の92%か、縦基準の46%の小さい方 */
  aspect-ratio: 9 / 18;      /* ← 9:18 を強制 */
  background:#f7eff5;
  border-radius:12px;
  box-shadow:0 10px 40px rgba(0,0,0,.12);
  overflow:hidden;
  transform: translateZ(0);   /* iOS の微妙なズレ対策 */
}

/* === キャンバス === */
canvas#game{
  position:absolute; inset:0; width:100%; height:100%;
  background: linear-gradient(#fff8fd, #f2e6f0);
  z-index:0;
}

/* === HUD === */
#hud{
  position:absolute; left:0; right:0; top:0;
  display:flex; justify-content:center; padding:8px; z-index:20;
}
.badge{
  background:var(--panel); border-radius:999px; padding:8px 14px;
  box-shadow:0 4px 20px rgba(0,0,0,.1); color:var(--ink);
  font:600 14px/1.1 ui-rounded, system-ui, -apple-system, "Segoe UI", sans-serif;
}

/* === Overlay（中央固定）=== */
.overlay{
  position:absolute; inset:0;
  display:flex; align-items:center; justify-content:center;
  padding:16px;
  background:rgba(246,234,241,.8); backdrop-filter:blur(3px);
  z-index:30;
}
.overlay.hidden{ display:none; }

/* オーバーレイ内カード */
.center .card, .overlay .card{
  background:var(--panel); padding:16px 18px; border-radius:14px;
  box-shadow:0 10px 40px rgba(0,0,0,.15);
  text-align:center; color:var(--ink);
}
.card h1{ margin:6px 0 8px; font:700 20px/1.2 ui-rounded, system-ui; }
.card h2{ margin:6px 0 8px; font:700 18px/1.2 ui-rounded, system-ui; }
.card p{ margin:0 0 10px; font:500 13px/1.4 ui-rounded, system-ui; color:#5a5a5a; }
.card .char{ width:96px; height:auto; display:block; margin:0 auto 8px; }
.row{ display:flex; gap:10px; justify-content:center; margin-top:8px; }

button{
  border:0; padding:10px 14px; border-radius:12px;
  font:600 14px/1 ui-rounded, system-ui;
  background:#f1e2ea; color:var(--ink);
  box-shadow:0 4px 16px rgba(0,0,0,.08);
}
button.primary{ background:var(--accent); color:#fff; }
button.ghost{ background:transparent; border:2px solid #e8d4df; }

/* === D-Pad === */
#controls{
  position:absolute; left:0; right:0; bottom:0; z-index:25;
  display:flex; justify-content:center; padding:8px 0 10px;
  pointer-events:none;               /* 全体は拾わない */
}
.dpad{ display:flex; flex-direction:column; align-items:center; gap:6px; }
.dpad .mid{ display:flex; gap:6px; align-items:center; }
.btn{
  min-width:46px; min-height:46px; border-radius:12px; background:#fff;
  pointer-events:auto;               /* ボタンだけ操作可能 */
}
#btn-up, #btn-down, #btn-left, #btn-right{ font-size:16px; }

/* === コピー/選択/長押しコールアウトの全面禁止（ゲーム領域） === */
#viewport, #viewport *{
  -webkit-user-select: none !important;
  user-select: none !important;
  -webkit-touch-callout: none !important; /* iOS: 長押しメニュー */
  -webkit-tap-highlight-color: transparent;
}
#viewport img, #viewport canvas, #viewport a, #viewport button{
  -webkit-user-drag: none;    /* iOS Safari/Chrome: 長押し→画像保存を防止 */
  touch-action: manipulation; /* 長押しズーム/ダブルタップ抑制 */
}

/* 一部だけ選択OKにしたいとき（説明テキスト等） */
[data-allow-select], [data-allow-select] *{
  -webkit-user-select: text !important;
  user-select: text !important;
  -webkit-touch-callout: default !important;
}

/* 余計な競合を生むので削除：
   - @media (max-aspect-ratio: 1/2){ #viewport{ width:90vw; height:180vw; } }
   - .overlay の重複定義
   - .overlay.start の下寄せ指定（中央寄せを崩すため） */

/* === キャラ選択（置き換え）=== */
.char-select{
  display:flex;
  gap:10px;
  justify-content:center;
  margin:8px 0 12px;
}

/* 基本ボタン */
.char-btn{
  display:flex;
  flex-direction:column;
  align-items:center;
  gap:6px;
  background:#fff;
  border:2px solid #e8d4df;
  border-radius:12px;
  padding:8px 10px;
  min-width:92px;
  transition:
    transform .06s ease,
    border-color .12s ease,
    box-shadow .12s ease,
    background-color .12s ease;
}

/* 画像サイズ：64px → 24px（=約3倍小さく） */
.char-btn img{
  width:24px;
  height:24px;
  pointer-events:none;
  image-rendering:auto; /* ぼけ防止（PNGならそのままでOK） */
}

/* ラベル */
.char-btn span{
  font:600 12px/1 ui-rounded, system-ui;
  color:#555;
}

/* 選択状態（常に少しピンク寄り＋強調ボーダー） */
.char-btn.selected{
  border-color: var(--accent);
  background: #fff5f9; /* うっすらピンク */
  box-shadow: 0 0 0 2px rgba(255,143,177,.18) inset;
}

/* 押下中（タップ中/クリック中）：しっかりピンクに変化して“押した感”を出す */
.char-btn:active,
.char-btn.pressed{
  background: #ffe8f1;         /* 薄いピンクハイライト */
  border-color: #ffb5cc;
  transform: scale(0.96);      /* ちょい縮む */
}

/* キーボード操作時のアクセシビリティ */
.char-btn:focus-visible{
  outline:3px solid rgba(123, 188, 255, .55);
  outline-offset:3px;
  border-radius:14px;
}

/* === キャラ選択パネル === */
.char-panel{
  overflow:hidden;
  max-height:0;
  opacity:0;
  transform: translateY(-4px);
  transition: max-height .22s ease, opacity .18s ease, transform .22s ease;
  margin-top:8px;
}
.char-panel.open{
  max-height: 200px;  /* パネルの中身の高さより少し大きめに */
  opacity:1;
  transform: translateY(0);
}

/* 既存の .char-select / .char-btn はそのままでOK（前回渡した色/押下スタイルも可） */